!function(){"use strict";angular.module("frontendApp",["ui.router","satellizer","toastr","leaflet-directive","720kb.datepicker","tableSort","ngAnimate"])}(),function(){"use strict";var a="https://finder.royhewitt.com/",b="https://www.fws.gov/southeast/finder/";angular.module("frontendApp").constant("API_URL",a).config(["$urlRouterProvider","$stateProvider","$authProvider","toastrConfig",function(c,d,e,f){c.otherwise("/species/list"),d.state("home",{url:"/",templateUrl:"home/main.html",controller:"HomeCtrl",resolve:{SpeciesList:["Species",function(a){return a.getSpecies({populate:!1})}]}}).state("species",{url:"/species",templateUrl:"species/main.html"}).state("species.summary",{url:"/summary",templateUrl:"species/summary.html",controller:"SpeciesListCtrl",resolve:{SpeciesList:["Species",function(a){return a.getSpecies({populate:!1})}]}}).state("species.list",{url:"/list",templateUrl:"species/list.html",controller:"SpeciesListCtrl",resolve:{SpeciesList:["Species",function(a){return a.getSpecies({populate:["categorization"]})}]}}).state("species.create",{url:"/create",templateUrl:"species/create.html",controller:"CreateSpeciesCtrl",resolve:{officeList:["Office",function(a){return a.getOffices()}],userList:["User",function(a){return a.getUsers()}],categoryList:["Category",function(a){return a.getCategories()}]}}).state("species.update",{url:"/update/:id",templateUrl:"species/update.html",controller:"UpdateSpeciesCtrl",resolve:{theSpecies:["Species","$stateParams",function(a,b){return a.getOne(b.id)}],officeList:["Office",function(a){return a.getOffices()}],userList:["User",function(a){return a.getUsers()}],categoryList:["Category",function(a){return a.getCategories()}]}}).state("species.detail",{url:"/:id",templateUrl:"species/detail.html",controller:"SpeciesCtrl",resolve:{theSpecies:["Species","$stateParams",function(a,b){return a.getOne(b.id)}],associatedLands:["$http","$stateParams",function(b,c){var d={params:{where:{species:c.id}}};return b.get(a+"specieslands",d).then(function(a){return a.data.map(function(a){return{id:a.id,name:a.land.name,agency:a.land.agency,label:a.land.label,population:a.population}})})}]}}).state("query",{url:"/query",templateUrl:"query/main.html"}).state("query.list",{url:"/list",templateUrl:"query/list.html",controller:"QueryListCtrl"}).state("query.endemic",{url:"/endemic",templateUrl:"query/endemic/endemic.html",controller:"QueryEndemicCtrl"}).state("query.non-endemic",{url:"/non-endemic",templateUrl:"query/nonEndemic/non-endemic.html",controller:"QueryNonEndemicCtrl"}).state("query.non-southeast",{url:"/non-southeast",templateUrl:"query/region/non-southeast.html",controller:"QueryNonSoutheastCtrl"}).state("query.status",{url:"/status",templateUrl:"query/byStatus/status.html",controller:"QueryStatusCtrl"}).state("query.custom",{url:"/custom",templateUrl:"query/custom/custom.html",controller:"QueryCtrl",resolve:{officeList:["Office",function(a){return a.getOffices()}],landsList:["Lands",function(a){return a.getLands()}]}}).state("user",{url:"/user",templateUrl:"user/main.html"}).state("user.create",{url:"/create",templateUrl:"user/create.html",controller:"CreateUserCtrl"}).state("user.profile",{url:"/profile",templateUrl:"user/profile.html",controller:"ProfileCtrl",resolve:{currentUser:["User","$stateParams",function(a,b){return a.getUser(b.id)}]}}).state("user.update",{url:"/update/:id",templateUrl:"user/profile.html",controller:"ProfileCtrl",resolve:{currentUser:["User","$stateParams",function(a,b){return a.getUser(b.id)}]}}).state("user.admin",{url:"/admin",templateUrl:"user/admin.html",controller:"UserAdminCtrl",resolve:{allUsers:["User",function(a){return a.getUsers()}]}}).state("offices",{url:"/offices",templateUrl:"offices/main.html"}).state("offices.create",{url:"/create",templateUrl:"offices/create.html",controller:"OfficeCreateCtrl"}).state("offices.detail",{url:"/detail/:id",templateUrl:"offices/detail.html",controller:"OfficeDetailCtrl",resolve:{theOffice:["Office","$stateParams",function(a,b){return a.getOffice(b.id)}]}}).state("offices.update",{url:"/update/:id",templateUrl:"offices/update.html",controller:"OfficeUpdateCtrl",resolve:{theOffice:["Office","$stateParams",function(a,b){return a.getOffice(b.id)}]}}).state("offices.list",{url:"/list",templateUrl:"offices/list.html",controller:"OfficeListCtrl",resolve:{officeList:["Office",function(a){return a.getOffices()}]}}).state("categories",{url:"/categories",templateUrl:"categories/main.html"}).state("categories.list",{url:"/list",templateUrl:"categories/list.html",controller:"CategoryListCtrl",resolve:{categoryList:["Category",function(a){return a.getCategories()}]}}).state("categories.create",{url:"/create",templateUrl:"categories/create.html",controller:"CategoriesCtrl",resolve:{category:function(){return null}}}).state("categories.update",{url:"/update/:id",templateUrl:"categories/update.html",controller:"CategoriesCtrl",resolve:{category:["Category","$stateParams",function(a,b){return a.getCategory(b.id)}]}}).state("lands",{url:"/lands",templateUrl:"lands/lands.html",controller:"LandsCtrl",resolve:{landsList:["Lands",function(a){return a.getLands()}],speciesList:["Species",function(a){return a.getSpecies()}]}}),e.loginUrl=a+"auth/login",e.registerUrl=a+"auth/register",e.google({url:a+"auth/google",redirectUri:b,clientId:"302206927623-uvp8uhlid7kj6a7hcpsa3rugipluouc9.apps.googleusercontent.com"}),angular.extend(f,{positionClass:"toast-top-left"})}])}(),function(){"use strict";angular.module("frontendApp").service("PickList",function(){var a=["Alabama","Alaska ","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],b=["Amphibian","Amphipod","Bee","Beetle","Bird","Butterfly","Caddisfly","Crayfish","Crustacean","Dragonfly","Fly","Fish","Isopod","Mammal","Moth","Mussel","Non-Vascular Plant","Reptile","Snail","Stonefly","Vascular Plant"],c=["Candidate","Petitioned","Petition Withdrawn","Substantial 90-day Finding","Not Substantial 90-day Finding","Not Warranted 12-month Finding","Proposed for Listing as Threatened","Final Listing as Threatened","Proposed for Listing as Endangered","Final Listing as Endangered","Proposed for Listing as Threatened due to Similarity of Appearance","Final Listing as Threatened due to Similarity of Appearance","Proposed for Listing as Endangered due to Similarity of Appearance","Final Listing as Endangered due to Similarity of Appearance","Lawsuit to Challenge Not Substantial 90-day Finding","Lawsuit to Challenge Not Warranted 12-month Finding","Under Review by the Agency's Own Discretionary Action","No Longer Considered a Listable Entity"],d=["Candidate Removal","Petition Withdrawn","Not Substantial 90-day Finding","Not Warranted 12-month Finding"],e=["Final Listing as Threatened due to Similarity of Appearance","Final Listing as Endangered due to Similarity of Appearance","Final Listing as Threatened","Final Listing as Endangered"],f=["Final Listing as Threatened due to Similarity of Appearance","Final Listing as Endangered due to Similarity of Appearance","Final Listing as Threatened","Final Listing as Endangered","Candidate Removal","Petition Withdrawn","Not Substantial 90-day Finding","Not Warranted 12-month Finding"],g=["Pacific","Southwest","Midwest","Southeast","Northeast","Mountain-Prairie","Alaska","Pacific Southwest","National"],h=[{value:"O+",description:"A significant population occurs on the Refuge."},{value:"O",description:"The species and its habitats occur on the Refuge."},{value:"P",description:"The species possibly occurs on the Refuge."},{value:"U",description:"Habitat is apparently present and the area is within the species' range."}];return{TAXON_LIST:b.sort(),STATUS_LIST:c.sort(),REGION_LIST:g,STATE_LIST:a.sort(),PROTECTED:e.sort(),DOES_NOT_NEED_PROTECTION:d.sort(),FINISHED:f.sort(),POPULATION_CODES:h}})}(),function(){"use strict";angular.module("frontendApp").controller("HomeCtrl",["$scope","SpeciesList","PickList",function(a,b,c){function d(a,b){var c=[];return angular.forEach(b,function(b){a.indexOf(b.currentStatus())>-1&&c.push(b)}),c}function e(a,b){var c=[];return angular.forEach(b,function(b){a===b.currentStatus()&&c.push(b)}),c}a.species={list:b,listed:d(c.PROTECTED,b),lessProtection:d(c.DOES_NOT_NEED_PROTECTION,b)},angular.forEach(c.STATUS_LIST,function(c){a.species[c]=e(c,b)})}])}(),function(){"use strict";angular.module("frontendApp").factory("SpeciesLandsModel",["$http","API_URL",function(a,b){var c=function(a){this.id=a.id,this.species=a.species,this.land=a.land,this.population=a.population};return c.prototype.create=function(){return a.post(b+"specieslands",this)},c.prototype.destroy=function(){return a.delete(b+"specieslands/"+this.id)},c.prototype.validate=function(){return"string"==typeof this.species&&"string"==typeof this.land},c}])}(),function(){"use strict";angular.module("frontendApp").service("Lands",["$http","API_URL","toastr",function(a,b,c){function d(){return a.get("./data/pad-us-unique.js").then(function(a){return a.data}).catch(function(a){return c.error(a.statusText,"Could not download protected lands picklist."),a})}function e(c){return c={params:c}||{},a.get(b+"lands/",c)}function f(d){return a.get(b+"lands/"+d).then(function(a){return a.data}).catch(function(a){c.error(a.statusText,"Could not retrieve lands.")})}function g(d){return a.post(b+"lands",d).then(function(a){return c.success("Successfully created "+d.name+"."),a}).catch(function(a){return c.error(a.statusText,"Could not create protected land."),a})}function h(d){return a.post(b+"lands/"+d.id,d).then(function(a){return c.success("Successfully updated "+d.name+"."),a}).catch(function(a){return c.error(a.statusText,"Could not updated protected land."),a})}function i(d){return a.delete(b+"lands/"+d).then(function(a){return c.success("Successfully removed "+d.name+"."),a}).catch(function(a){return c.error(a.statusText,"Could not delete protected land."),a})}return{getPickList:d,getLands:e,getOne:f,create:g,update:h,destroy:i}}])}(),function(){"use strict";angular.module("frontendApp").controller("LandsCtrl",["$scope","landsList","speciesList","PickList",function(a,b,c,d){function e(a,b){return a.fullName().toLowerCase()<b.fullName().toLowerCase()?-1:a.fullName().toLowerCase()>b.fullName().toLowerCase()?1:0}a.lands=b.data,a.species=c.sort(e),a.codes=d.POPULATION_CODES}])}(),function(){"use strict";angular.module("frontendApp").factory("LandModel",["Lands","API_URL","toastr",function(a,b,c){var d=function(a){this.id=a.id,this.agency=a.agency,this.name=a.name,this.label=a.label||null,this.custom=a.custom||!1,this.notes=a.notes,this.updatedAt=a.updatedAt};return d.prototype.create=function(){return a.create(this)},d.prototype.update=function(){return a.update(this)},d.prototype.destroy=function(){return a.destroy(this)},d.prototype.validate=function(){return void 0!==this.name&&void 0!==this.agency},d}])}(),function(){"use strict";angular.module("frontendApp").directive("associateLands",["Lands","$http","API_URL","SpeciesLandsModel","toastr",function(a,b,c,d,e){return{restrict:"E",templateUrl:"./lands/associateLands.html",scope:{species:"=",lands:"=",codes:"="},controller:["$scope",function(a){function f(d){var e={params:{where:{species:d}}};b.get(c+"specieslands",e).then(function(b){a.associatedLands=b.data.map(function(a){return{id:a.id,name:a.land.name,agency:a.land.agency,label:a.land.label,population:a.population}})})}a.speciesLandRecord=new d({}),a.updateLand=function(b){a.speciesLandRecord.land=b},a.updateSpecies=function(b){a.speciesLandRecord.species=b,f(b)},a.updatePopulationCode=function(b){a.speciesLandRecord.population=b},a.createAssociation=function(){a.speciesLandRecord.validate()&&a.speciesLandRecord.create().then(function(b){e.success(b.statusText),f(a.speciesLandRecord.species)}).catch(function(b){e.error(b.statusText,b.data),f(a.speciesLandRecord.species)})},a.removeAssociation=function(b){var c=new d({id:b.id});c.destroy().then(function(c){e.success("Removed "+b.name+"."),f(a.speciesLandRecord.species)}).catch(function(a){e.error(a.statusText)})}}]}}])}(),function(){"use strict";angular.module("frontendApp").directive("createLand",["Lands","LandModel","toastr",function(a,b,c){return{restrict:"E",templateUrl:"./lands/createLand.html",scope:{species:"=",view:"=",lands:"="},controller:["$scope",function(c){function d(a,b){return a.agency.toLowerCase()<b.agency.toLowerCase()?-1:a.agency.toLowerCase()>b.agency.toLowerCase()?1:0}c.land=new b({}),a.getPickList().then(function(a){c.lands=a.sort(d)}),c.updateModel=function(a){c.land.name=a.name,c.land.agency=a.agency},c.createLand=function(a){a.validate()&&a.create().then(function(){c.land=new b({})})}}]}}])}(),function(){"use strict";angular.module("frontendApp").controller("SpeciesCtrl",["$scope","theSpecies","Map","$state","associatedLands",function(a,b,c,d,e){a.associatedLands=e,a.species=b,a.mapDefaults={scrollWheelZoom:!1},a.center={lat:34.8934492,lng:-94.1480978,zoom:3},a.destroy=function(a){a.destroy(),d.go("species.list")},a.loadMap=function(){c.getStates(a.species.range).then(function(b){angular.extend(a,{geojson:{data:b.data,style:c.geoStyle}})})},a.loadMap()}])}(),function(){"use strict";angular.module("frontendApp").controller("UpdateSpeciesCtrl",["$scope","theSpecies","User","Map","PickList","officeList","userList","categoryList",function(a,b,c,d,e,f,g,h){a.mapDefaults={scrollWheelZoom:!1},a.categories=h,a.taxonList=e.TAXON_LIST,a.statusList=e.STATUS_LIST,a.userList=g,a.officeList=f,a.species=b,a.center={lat:34.8934492,lng:-94.1480978,zoom:3},a.updateSpecies=function(a){a.validate()&&a.update()},a.isEditor=function(){return c.isEditor()},a.isAdmin=function(){return c.isAdmin()},a.loadMap=function(){d.getStates(a.species.range).then(function(b){angular.extend(a,{geojson:{data:b.data,style:d.geoStyle}}),a.$on("leafletDirectiveGeoJson.click",function(b,c){d.toggleState(c,a.species.range).then(function(b){a.species.range=b.range,d.updateStyle(b.payload)})})})},a.loadMap()}])}(),function(){"use strict";angular.module("frontendApp").controller("SpeciesListCtrl",["$scope","User","SpeciesList",function(a,b,c){a.species=c,a.isAdmin=function(){return b.isAdmin()},a.isEditor=function(){return b.isEditor()},a.remove=function(b){var c=a.species.indexOf(b);a.species.splice(c,1),b.destroy()}}])}(),function(){"use strict";angular.module("frontendApp").service("Species",["$http","API_URL","toastr","SpeciesModel",function(a,b,c,d){function e(e){return e={params:e}||{},a.get(b+"species",e).then(function(a){var b=[];return angular.forEach(a.data,function(a){b.push(new d(a))}),b}).catch(function(a){c.error(a.statusText,"Could not download species list.")})}function f(e){return a.get(b+"species/"+e).then(function(a){return new d(a.data)}).catch(function(a){c.error(a.statusText,"Could not retrieve species.")})}function g(d){return a.post(b+"species",d).then(function(){c.success("Successfully created "+d.commonName+".")}).catch(function(a){c.error(a.statusText,"Could not create species.")})}function h(d){return a.post(b+"species/"+d.id,d).then(function(){c.success("Successfully updated "+d.commonName+".")}).catch(function(a){c.error(a.statusText,"Could not updated species.")})}function i(d){return a.delete(b+"species/"+d).then(function(){c.success("Successfully removed "+d.commonName+".")}).catch(function(a){c.error(a.statusText,"Could not delete species.")})}function j(a){return angular.forEach(a,function(a){a.range.sort()}),a}return{getSpecies:e,getOne:f,create:g,update:h,destroy:i,alphabetizeRange:j}}])}(),function(){"use strict";angular.module("frontendApp").controller("CreateSpeciesCtrl",["$scope","SpeciesModel","Map","PickList","officeList","userList","categoryList",function(a,b,c,d,e,f,g){var h=!1;a.categories=g,a.officeList=e,a.userList=f,a.mapDefaults={scrollWheelZoom:!1},a.taxonList=d.TAXON_LIST,a.statusList=d.STATUS_LIST,a.species=new b({}),a.center={lat:34.8934492,lng:-94.1480978,zoom:3},a.create=function(d){d.validate()&&d.create().then(function(d){201===d.status&&(a.species=new b({}),c.clearStates(a.geojson).then(function(b){a.geojson=b.data,a.loadMap()}))})},a.loadMap=function(){c.getGeoJSON().then(function(b){angular.extend(a,{geojson:{data:b.data,style:c.geoStyle}}),h||(h=!0,a.$on("leafletDirectiveGeoJson.click",function(b,d){c.toggleState(d,a.species.range).then(function(b){a.species.range=b.range,c.updateStyle(b.payload)})}))})},a.loadMap()}])}(),function(){"use strict";angular.module("frontendApp").directive("speciesStatus",["toastr",function(a){return{restrict:"E",templateUrl:"./species/statusTemplate.html",scope:{statuses:"=",options:"="},controller:["$scope",function(b){function c(c){var d=/^\d{4}-\d{2}-\d{2}$/,e=/\(?(?:(http|https):\/\/)(?:((?:[^\W\s]|\.|-|[:]{1})+)@{1})?((?:www.)?(?:[^\W\s]|\.|-)+[\.][^\W\s]{2,4}|localhost(?=\/)|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(?::(\d*))?([\/]?[^\s\?]*[\/]{1})*(?:\/?([^\s\n\?\[\]\{\}\#]*(?:(?=\.)){1}|[^\s\n\?\[\]\{\}\.\#]*)?([\.]{1}[^\s\?\#]*)?)?(?:\?{1}([^\s\n\#\[\]]*))?([\#][^\s\n]*)?\)?/,f=b.options.indexOf(c.name)>-1,g=d.test(c.date),h=e.test(c.url);return c.url&&!h&&a.warning("Please include a valid URL"),f||a.warning("Please select a status from the drop-down menu"),g||a.warning("Please select a date from the calendar. Format is [YYYY-MM-DD]."),f&&g}b.addStatus=function(){var a=!0;angular.forEach(b.statuses,function(b){c(b)||(a=!1)}),a&&b.statuses.push({})},b.removeStatus=function(c){return 1===b.statuses.length?void a.warning("A species must have at least one status"):void b.statuses.splice(c,1)}}]}}])}(),function(){"use strict";angular.module("frontendApp").directive("speciesOfficeList",function(){return{restrict:"E",templateUrl:"./species/speciesOfficeList.html",scope:{species:"=",offices:"="},controller:["$scope",function(a){a.addOffice=function(a,b){a.offices.push(b)},a.removeOffice=function(a,b){var c=a.offices.indexOf(b);a.offices.splice(c,1)}}]}})}(),function(){"use strict";angular.module("frontendApp").directive("speciesCategorizationList",function(){return{restrict:"E",templateUrl:"./species/speciesCategorizationList.html",scope:{species:"=",categories:"="},controller:["$scope",function(a){a.addCategory=function(a,b){a.addCategory(b)},a.removeCategory=function(a,b){a.removeCategory(b)}}]}})}(),function(){"use strict";angular.module("frontendApp").directive("speciesExpertList",function(){return{restrict:"E",templateUrl:"./species/speciesExpertList.html",scope:{species:"=",users:"="},controller:["$scope",function(a){a.addExpert=function(a,b){a.experts.push(b)},a.removeExpert=function(a,b){var c=a.experts.indexOf(b);a.experts.splice(c,1)}}]}})}(),function(){"use strict";angular.module("frontendApp").directive("proposedDetermination",function(){return{restrict:"E",templateUrl:"./species/proposedDetermination.html",scope:{species:"="},controller:["$scope",function(a){a.determinationType=1,a.radioChanged=function(){a.species.proposedDetermination=""}}]}})}(),function(){"use strict";angular.module("frontendApp").factory("SpeciesModel",["$http","API_URL","toastr",function(a,b,c){var d=function(a){this.id=a.id,this.scientificName=a.scientificName,this.commonName=a.commonName,this.taxon=a.taxon,this.offices=a.offices||[],this.range=a.range||[],this.status=a.status||[{}],this.categorization=a.categorization||[],this.proposedDetermination=a.proposedDetermination,this.experts=a.experts||[],this.lands=a.lands||[],this.updatedAt=a.updatedAt,this.ssa=a.ssa};return d.prototype.create=function(){return a.post(b+"species",this).then(function(a){return c.success("Successfully created "+a.data.scientificName+"."),a}).catch(function(a){var b=[];angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText)})},d.prototype.update=function(){return delete this.leadOffice,a.put(b+"species/"+this.id,this).then(function(a){c.success("Successfully updated "+a.data.scientificName+".")}).catch(function(a){var b=[];angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText)})},d.prototype.destroy=function(){var d=this;return a.delete(b+"species/"+this.id).then(function(){c.success("Successfully removed "+d.scientificName+" from the database.")}).catch(function(a){var b=[];angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText)})},d.prototype.associateOffice=function(e){var f=this;return a.post(b+"species/"+f.id+"/offices/"+e.id).then(function(a){return c.success("Successfully associated "+f.scientificName+" with "+e.name+"."),new d(a.data)}).catch(function(a){return c.error(a.statusText,"Could not associate "+f.scientificName+" with "+e.name+"."),a})},d.prototype.removeAssociatedOffice=function(e){var f=this;return a.delete(b+"species/"+f.id+"/offices/"+e.id).then(function(a){return c.success("Successfully removed association between "+f.scientificName+" and "+e.name+"."),new d(a.data)}).catch(function(a){return c.error(a.statusText,"Could not remove associattion between "+f.scientificName+" and "+e.name+"."),a})},d.prototype.associateExpert=function(e){var f=this;return a.post(b+"species/"+f.id+"/experts/"+e.id).then(function(a){return c.success("Successfully associated "+f.scientificName+" with "+e.name+"."),new d(a.data)}).catch(function(a){return c.error(a.statusText,"Could not associate "+f.scientificName+" with "+e.name+"."),a})},d.prototype.removeAssociatedExpert=function(e){var f=this;return a.delete(b+"species/"+f.id+"/experts/"+e.id).then(function(a){return c.success("Successfully removed association between "+f.scientificName+" and "+e.name+"."),new d(a.data)}).catch(function(a){return c.error(a.statusText,"Could not remove associattion between "+f.scientificName+" and "+e.name+"."),a})},d.prototype.fullName=function(){return this.commonName+" ("+this.scientificName+")"},d.prototype.currentStatus=function(){var a=this,b=a.status[0];return angular.forEach(a.status,function(a){new Date(a.date)>new Date(b.date)&&(b=a)}),b.name},d.prototype.removeEmptyStatus=function(){var a=this;angular.forEach(a.status,function(b,c){b.name||b.date||a.status.splice(c,1)})},d.prototype.getLeadOfficeId=function(){return 1===this.office.length?this.office[0].id:this.mostRecentOffice().id},d.prototype.getLeadOfficeName=function(){var a=[];return 0===this.offices.length?"No lead office specified":1===this.offices.length?this.offices[0].name:(angular.forEach(this.offices,function(b){a.push(b.name)}),a.join(", "))},d.prototype.mostRecentOffice=function(){var a=this.office[0];return angular.forEach(this.office,function(b){new Date(a.updatedAt)<new Date(b.updatedAt)&&(a=b)}),a},d.prototype.lastCategoryAsText=function(){var a="",b=this.categorization[this.categorization.length-1];return void 0===b?a:a=[b.code,b.name].join(" - ")},d.prototype.addCategory=function(a){return this.categorization.push(a),this.categorization},d.prototype.removeCategory=function(a){var b=this.categorization.indexOf(a);return b>-1&&this.categorization.splice(b,1),this.categorization},d.prototype.validate=function(){var a=this,b=a.status[a.status.length-1];return 0===a.range.length?(c.error("You must specify at least one state for this specie's range."),!1):1===a.status.length&&void 0===b.name&&void 0===b.date?(c.error("You must specify at least one status to create a species."),!1):(a.status.length>1&&void 0===b.name&&void 0===b.date&&a.status.pop(),!0)},d.prototype.alphabetizeRange=function(){return this.range.sort()},d}])}(),function(){"use strict";angular.module("frontendApp").service("User",["$http","API_URL","$auth","toastr","UserModel",function(a,b,c,d,e){function f(){o=c.getPayload(),p=c.isAuthenticated()}function g(){return a.get(b+"user").then(function(a){var b=[];return angular.forEach(a.data,function(a){b.push(new e(a))}),b}).catch(function(a){return d.error(a.statusText,"Could not download user list."),a})}function h(c){return a.get(b+"user/"+c).then(function(a){return new e(a.data)}).catch(function(a){return d.error(a.statusText,"Could not download user."),a})}function i(c){return a.delete(b+"user/"+c).catch(function(a){return d.error(a.statusText,"Could not delete user."),a})}function j(c,e){return a.post(b+"user/"+e,c).catch(function(a){return d.error(a.statusText,"Could not update user list."),a})}function k(){if(p)return"editor"===o.act}function l(){if(p)return"admin"===o.act}function m(){if(p)return o.sub}function n(){return o.name||""}var o,p;return f(),{login:f,getUsers:g,getUser:h,getUserId:m,destroy:i,update:j,isEditor:k,isAdmin:l,getUsername:n}}])}(),function(){"use strict";angular.module("frontendApp").controller("ProfileCtrl",["$scope","User","currentUser",function(a,b,c){a.user=c,a.update=function(a){a.validate()&&a.update()},a.isAdmin=function(){return b.isAdmin()},a.isEditor=function(){return b.isEditor()}}])}(),function(){"use strict";angular.module("frontendApp").factory("UserModel",["$http","API_URL","toastr",function(a,b,c){var d=function(a){this.id=a.id,this.name=a.name,this.email=a.email,this.accountType=a.accountType,this.job=a.job,this.phone=a.phone,this.organization=a.organization,this.updatedAt=a.updatedAt};return d.prototype.create=function(){var d=this;return a.post(b+"user",d).then(function(a){return c.success("Successfully created new user "+d.email+"."),a}).catch(function(a){var b=[];return angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText),a})},d.prototype.delete=function(){var d=this;return a.delete(b+"user/"+d.id).then(function(){c.success("Successfully deleted user "+d.email+".")}).catch(function(a){var b=[];return angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText),a})},d.prototype.update=function(){var d=this;return a.post(b+"user/"+d.id,d).then(function(){c.success("Successfully updated user "+d.email+".")}).catch(function(a){var b=[];return angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText),a})},d.prototype.validate=function(){var a=/^([a-z0-9_\.-]+\@[\da-z\.-]+\.[a-z\.]{2,6})$/gm,b=a.test(this.email);return!!b||(c.error("You must specify a valid email."),!1)},d.prototype.isAdmin=function(){return"admin"===this.accountType.toLowerCase()},d.prototype.isEditor=function(){return"editor"===this.accountType.toLowerCase()},d}])}(),function(){"use strict";angular.module("frontendApp").controller("UserAdminCtrl",["$scope","allUsers",function(a,b){a.users=b,a.destroy=function(b){var c=a.users.indexOf(b);a.users.splice(c,1),b.delete()}}])}(),function(){"use strict";angular.module("frontendApp").controller("CreateUserCtrl",["$scope","UserModel",function(a,b){a.user=new b({}),a.user.accountType="viewer",a.create=function(c){c.validate()&&c.create().then(function(c){201===c.status&&(a.user=new b({}))})}}])}(),function(){"use strict";angular.module("frontendApp").controller("QueryCtrl",["$scope","$httpParamSerializerJQLike","Map","Query","PickList","landsList","officeList",function(a,b,c,d,e,f,g){function h(a){if(a.click)a.click();else if(document.createEvent){var b=document.createEvent("HTMLEvents");b.initEvent("click",!1,!0),a.dispatchEvent(b)}}function i(){var a=new Date;return"at-risk-species-finder-custom-query"+a.toISOString().slice(0,10)+".csv"}function j(a){if(window.navigator.msSaveOrOpenBlob&&window.Blob){var b=new Blob([a],{type:"text/csv"});navigator.msSaveOrOpenBlob(b,i())}else{var c=document.createElement("a");c.href="data:attachment/csv,"+encodeURI(a),c.target="_blank",c.download=i(),c.className="btn btn-success btn-block",c.innerHTML="Download CSV";var d=document.querySelector("button[type=submit]"),e=document.querySelector("form");e.insertBefore(c,d),h(c)}}var k=!1;a.mapDefaults={scrollWheelZoom:!1},a.officeList=g,a.landsList=f.data,a.statusList=e.STATUS_LIST,a.taxonList=e.TAXON_LIST,a.regionList=e.REGION_LIST,a.loading={reset:!1,query:!1},a.query={range:[],rangeQueryType:"any"},a.csvData=!1,a.center={lat:34.8934492,lng:-94.1480978,zoom:3},a.queryDatabase=function(){a.loading.query=!0;var c;if(a.query.offices)var e=a.query.offices.map(function(a){return a.name});if(a.query.lands)var f=a.query.lands.map(function(a){return a.name});a.query.offices=e,a.query.lands=f,c=b(a.query),d.custom(c).then(function(b){"string"==typeof b?j(b):a.results=b}).finally(function(){a.loading.query=!1})},a.loadMap=function(){c.getGeoJSON().then(function(b){angular.extend(a,{geojson:{data:b.data,style:c.geoStyle}}),k||(k=!0,a.$on("leafletDirectiveGeoJson.click",function(b,d){c.toggleState(d,a.query.range).then(function(b){a.query.range=b.range,c.updateStyle(b.payload)})}))})},a.resetQuery=function(){a.loading.reset=!0,a.query={range:[],rangeQueryType:"any",csv:!1},c.clearStates(a.geojson).then(function(b){a.geojson=b.data,a.loadMap(),a.results=null,a.loading.reset=!1})},a.loadMap()}])}(),function(){"use strict";angular.module("frontendApp").controller("QueryListCtrl",["$scope",function(a){a.queries=[{name:"Species by status",description:"Query the at risk species finder for species with a certain current status.  To select more than one species from the list hold down the Command button on a Mac or Control button on a PC and choose each of the statuses you would like to search with your mouse.  To print your query result press Command + P on your mac or Control + P on a PC, or select File... print.",sref:"query.status"},{name:"Endemic Species (range includes only one state)",description:"By default this query returns all species that are found in only one state. If you would like to limit your query to a specific state enter the full state name (not the abbreviation) into the input below. To retrieve any endemic species leave the field blank.",sref:"query.endemic"},{name:"Species that occur in more than one state",description:"By default this query returns all species that are found in more than one state. If you would like to limit your query to make sure that a specific state is included in the species range enter the state name (not the abbreviation) in the input below. To retrieve any endemic species leave the field blank.",sref:"query.non-endemic"},{name:"Species that will be addressed by a Region other than the Southeast",description:"By default this query returns all species that are found in more than one state. If you would like to limit your query to make sure that a specific state is included in the species range enter the state name (not the abbreviation) in the input below. To retrieve any endemic species leave the field blank.",sref:"query.non-southeast"},{name:"Custom Query",description:"Create your own query by combining different search criteria.",sref:"query.custom"}]}])}(),function(){"use strict";angular.module("frontendApp").service("Query",["$http","API_URL","SpeciesModel","toastr",function(a,b,c,d){function e(c){return a.get(b+"query/status?"+c).then(j).catch(function(a){d.error(a.statusText,"Query on current status failed.")})}function f(c){return a.post(b+"query/endemic",c).then(j).catch(function(a){d.error(a.statusText,"Query for endemic species failed.")})}function g(c){return a.post(b+"query/non-endemic",c).then(j).catch(function(a){d.error(a.statusText,"Query for species with range including more than one state failed.")})}function h(){return a.get(b+"query/other-region").then(j).catch(function(a){d.error(a.statusText,"Query for species led by a Region other than the Southeast failed")})}function i(c){return a.get(b+"query/custom?"+c).then(j).catch(function(a){d.error(a.statusText,"Custom query failed.");
})}function j(a){if("string"==typeof a.data)return a.data;var b=[];return angular.forEach(a.data,function(a){b.push(new c(a))}),0===b.length&&d.info("Query did not return any At-Risk species."),d.success("Query returned "+b.length+" At-Risk species."),b}return{otherRegion:h,nonEndemic:g,endemic:f,status:e,custom:i}}])}(),function(){"use strict";angular.module("frontendApp").controller("QueryEndemicCtrl",["$scope","Query","PickList",function(a,b,c){function d(){return angular.isArray(a.query.endemic)?"Endemic species (occur in only one state): "+a.query.endemic.join(" OR "):"All endemic species (only occur in one state)"}a.query={},a.stateList=c.STATE_LIST,a.loading=!1,a.queryEndemic=function(){a.loading=!0,b.endemic({state:a.query.endemic}).then(function(b){a.results=b,a.query.terms=d()}).finally(function(){a.loading=!1})}}])}(),function(){"use strict";angular.module("frontendApp").controller("QueryNonEndemicCtrl",["$scope","Query","PickList",function(a,b,c){function d(){a.loading=!1}function e(){return a.query.nonEndemic.length>0?"Species Occurring in "+a.query.nonEndemic.join(" "+a.query.type+" "):"All Species Ocurring in More than One State"}a.query={type:"and",nonEndemic:[]},a.stateList=c.STATE_LIST,a.loading=!1,a.queryNonEndemic=function(){a.loading=!0,b.nonEndemic({state:a.query.nonEndemic,type:a.query.type}).then(function(b){a.results=b,a.query.terms=e()}).finally(d)}}])}(),function(){"use strict";angular.module("frontendApp").controller("QueryStatusCtrl",["$scope","Query","PickList","$httpParamSerializerJQLike",function(a,b,c,d){function e(){a.loading=!1}a.query={},a.statusList=c.STATUS_LIST,a.loading=!1,a.queryStatus=function(){a.loading=!0,b.status(d({status:a.query.status})).then(function(b){a.results=b,a.query.terms="At-Risk Species with current status: "+a.query.status.join(" OR ")}).finally(e)}}])}(),function(){"use strict";angular.module("frontendApp").controller("QueryNonSoutheastCtrl",["$scope","Query","PickList",function(a,b,c){function d(){a.loading=!1}a.query={type:"and",nonEndemic:[]},a.stateList=c.STATE_LIST,a.loading=!1,a.otherRegion=function(){a.loading=!0,b.otherRegion().then(function(b){a.results=b,a.query.terms="Species that will be Addressed by a Region other than the Southeast"}).finally(d)}}])}(),function(){"use strict";angular.module("frontendApp").service("Office",["$http","API_URL","OfficeModel","toastr",function(a,b,c,d){function e(){return a.get(b+"offices").then(function(a){var b=[];return angular.forEach(a.data,function(a){b.push(new c(a))}),b.sort(g)}).catch(function(a){d.error(a.statusText,"Could not download offices.")})}function f(e){return a.get(b+"offices/"+e).then(function(a){return new c(a.data)}).catch(function(a){d.error(a.statusText,"Could not download office.")})}function g(a,b){return a.name<b.name?-1:a.name>b.name?1:0}return{getOffices:e,getOffice:f}}])}(),function(){"use strict";angular.module("frontendApp").controller("OfficeCreateCtrl",["$scope","PickList","OfficeModel",function(a,b,c){a.stateList=b.STATE_LIST,a.regionList=b.REGION_LIST,a.office=new c({}),a.create=function(b){b.validate()&&b.create(),a.office=new c({})}}])}(),function(){"use strict";angular.module("frontendApp").controller("OfficeListCtrl",["$scope","officeList","User",function(a,b,c){a.offices=b,a.isAdmin=function(){return c.isAdmin()},a.isEditor=function(){return c.isEditor()},a.remove=function(b){var c=a.offices.indexOf(b);a.offices.splice(c,1),b.destroy()}}])}(),function(){"use strict";angular.module("frontendApp").factory("OfficeModel",["$http","API_URL","toastr",function(a,b,c){var d=function(a){this.id=a.id,this.name=a.name,this.adminRegion=a.adminRegion,this.street=a.street,this.city=a.city,this.state=a.state,this.zip=a.zip,this.email=a.email,this.phone=a.phone,this.url=a.url,this.species=a.species};return d.prototype.validate=function(){return!0},d.prototype.create=function(){var d=this;return a.post(b+"offices",d).then(function(){c.success("Successfully created "+d.name)}).catch(function(a){var b=[];angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText)})},d.prototype.update=function(){var d=this;return a.post(b+"offices/"+d.id,d).then(function(){c.success("Successfully updated "+d.name)}).catch(function(a){var b=[];angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText)})},d.prototype.destroy=function(){var d=this;return a.delete(b+"offices/"+d.id).then(function(){c.success("Successfully deleted "+d.name)}).catch(function(a){var b=[];angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText)})},d.prototype.getLocation=function(){return[this.city,this.state].join(", ")},d}])}(),function(){"use strict";angular.module("frontendApp").controller("OfficeDetailCtrl",["$scope","theOffice","$state","SpeciesModel",function(a,b,c,d){a.office=b,a.species=[],angular.forEach(b.species,function(b){a.species.push(new d(b))}),a.currentStatus=function(a){return a.currentStatus()},a.destroy=function(a){a.destroy(),c.go("office.list")}}])}(),function(){"use strict";angular.module("frontendApp").controller("OfficeUpdateCtrl",["$scope","theOffice","PickList",function(a,b,c){a.office=b,a.stateList=c.STATE_LIST,a.regionList=c.REGION_LIST,a.update=function(a){a.validate()&&a.update()}}])}(),function(){"use strict";angular.module("frontendApp").factory("CategoryModel",["$http","API_URL","toastr",function(a,b,c){var d=function(a){this.id=a.id,this.name=a.name,this.description=a.description,this.code=a.code};return d.prototype.validate=function(){return!0},d.prototype.create=function(){var d=this;return a.post(b+"categories",d).then(function(){c.success("Successfully created "+d.name)}).catch(function(a){var b=[];angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText)})},d.prototype.update=function(){var d=this;return a.post(b+"categories/"+d.id,d).then(function(){c.success("Successfully updated "+d.name)}).catch(function(a){var b=[];angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText)})},d.prototype.destroy=function(){var d=this;return a.delete(b+"categories/"+d.id).then(function(){c.success("Successfully deleted "+d.name)}).catch(function(a){var b=[];angular.forEach(a.data.invalidAttributes,function(a){this.push(a[0].message)},b),c.error(b.join(". "),a.statusText)})},d}])}(),function(){"use strict";angular.module("frontendApp").service("Category",["$http","API_URL","CategoryModel","toastr",function(a,b,c,d){function e(){return a.get(b+"categories").then(function(a){var b=[];return angular.forEach(a.data,function(a){b.push(new c(a))}),b.sort(g)}).catch(function(a){d.error(a.statusText,"Could not download categories.")})}function f(e){return a.get(b+"categories/"+e).then(function(a){return new c(a.data)}).catch(function(a){d.error(a.statusText,"Could not download category.")})}function g(a,b){return a.name<b.name?-1:a.name>b.name?1:0}return{getCategories:e,getCategory:f}}])}(),function(){"use strict";angular.module("frontendApp").controller("CategoryListCtrl",["$scope","categoryList","User",function(a,b,c){a.categories=b,a.isAdmin=function(){return c.isAdmin()},a.remove=function(b){var c=a.categories.indexOf(b);a.categories.splice(c,1),b.destroy()}}])}(),function(){"use strict";angular.module("frontendApp").controller("CategoriesCtrl",["$scope","category","CategoryModel",function(a,b,c){b?a.category=b:a.category=new c({}),a.create=function(b){b.validate()&&b.create(),a.category=new c({})},a.update=function(a){a.validate()&&a.update()}}])}(),function(){"use strict";angular.module("frontendApp").controller("HeaderCtrl",["$scope","$state","$auth","toastr","User",function(a,b,c,d,e){a.isAuthenticated=function(){return c.isAuthenticated()},a.isAdmin=function(){return e.isAdmin()},a.isEditor=function(){return e.isEditor()},a.getId=function(){return e.getUserId()},a.logout=function(){c.logout(),c.removeToken(),d.success("You have successfully logged out.")},a.login=function(){c.authenticate("google").then(function(a){c.setToken(a.data.token),e.login(),d.success("Welcome, "+e.getUsername()+"!","Login Successful"),b.go("species.list")}).catch(function(a){d.error("Could not log you in.",a.data)})}}])}(),function(){"use strict";angular.module("frontendApp").service("Map",["$http","$q","toastr",function(a,b,c){function d(){return a.get("./data/usa.geo.js")}function e(a){if(a.length>0){var c=b.defer();return d().then(function(b){j=b,angular.forEach(a,function(a){angular.forEach(j.data.features,function(b){b.properties.name===a&&(b.properties.inRange=!0)})}),c.resolve(j)}),c.promise}return d}function f(a){var c=b.defer();return angular.forEach(a.data.features,function(a){a.properties.inRange=!1}),c.resolve(a),c.promise}function g(a){var b={weight:2,opacity:1,color:"white",fillOpacity:.5};return a.properties.inRange?b.fillColor="#3498db":b.fillColor="#95a5a6",b}function h(a){var b=a.leafletEvent.target;a.model.properties.inRange?b.setStyle({fillColor:"#3498db"}):b.setStyle({fillColor:"#95a5a6"})}function i(a,d){var e=b.defer(),f=a.model.properties.name;return _.contains(d,f)?(d=_.without(d,f),a.model.properties.inRange=!1,c.info("Removed "+f+" from species range.")):(d.push(f),a.model.properties.inRange=!0,c.info("Added "+f+" to species range.")),e.resolve({payload:a,range:d}),e.promise}var j=null;return{getStates:e,clearStates:f,getGeoJSON:d,geoStyle:g,updateStyle:h,toggleState:i}}])}();